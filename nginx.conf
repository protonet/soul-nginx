master_process on;
worker_processes 4;
error_log /dev/stderr debug;
user protonet;

events {
  worker_connections 1024;
}

http {
  include mime.types;

  sendfile on;

  # Custom HTTP access log format
  log_format protonet '$status $request_time $host "$request" $request_length $bytes_sent';
  access_log /dev/stdout protonet;

  # So I assume we have a thing that sends javascript error messages this way and then you can read them in the log :)
  log_format jserror '$args';

  # Configure our temporary directories
  proxy_temp_path       /tmp/;
  client_body_temp_path /tmp/;

  # The maximum size of the client request body
  client_max_body_size 50000M;
  # The maximum size of temporary upload buffer files. G instead of M won't work here :(
  proxy_max_temp_file_size 50000M;

  upstream soul-web {
    server soul-web:5000;
  }

  server {
    listen 0.0.0.0:80;
    
    # Used for resolving mod_zip bulk downloads
    location /files {
      root /home/protonet/dashboard/shared/;
      internal;
    }

    location / {
        root /home/protonet/dashboard/shared/public;
        try_files $uri @soul-web;
    }

    location @soul-web {
      proxy_set_header  X-Real-IP        $remote_addr;
      proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header  Host             $http_host;
      proxy_redirect    off;
      proxy_pass http://soul-web;
    }
  }
}
